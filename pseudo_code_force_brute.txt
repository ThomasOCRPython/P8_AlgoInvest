ALGORITHME  Force_brute :

The algorithm gives the most optimized combination of a stock chart, which does not exceed 500 euros and which gives the most profit

CONSTANT : 
price_max = 500;

list tab_action [20] <- [{item1 string "name" <- Action_1 
                         item2 integer "price" <- 20 
                        item3 float "profit" <- 0.05
                        },{...},...];
list tab_entier [20];
list tab_binair [1048576];
list combinaisons [1048576];
list combinaisons_valides;
list optimal;

integer len_list;
integer i;
integer nb;
integer binair;
integer combi;
integer price;
float profit;
float combinaison_valide;
float somme;
float total;

BEGIN

  len_list <- gives the length of the tab_action;

  tab_entier <- FOR i IN 1 TO (2**len_list)
                  RETURN i;
                ENDFOR;

  tab_binair <- FOR i IN tab_entier
                  converted to binary with built-in and remove the first 2 indexes of i;
                ENDFOR;
  
  combinaisons <- FOR binair in tab_binair
                    combinaison <- '0'*(len_list - gives the length of the binair)
                    RETURN combinaison;
                  ENDFOR;

  combinations_valides <- []

  FOR combi in combinaisons 
    price <- 0
    profit <- 0
    FOR nb in 1 to len_list 
      IF combi[i] == '1' THEN
        price <- price + tab_action[nb]['price']
        profit <- profit + tab_action[nb]['profit']
        ENDIF
    ENDFOR
    IF price <= price_max THEN
      add to combinations_valides (combi,profit)
      ENDIF
  ENDFOR

  solution_optimale <- combinaisons_valides[0][0]
  profit_max <- combinaisons_valides[0][1]

  FOR combinaison_valide in combinaisons_valides:
    IF combinaison_valide[1] > profit_max THEN
      solution_optimale = combi[0]
      profit_max = combi[1]
    ENDIF
  ENDFOR

  WRITE 'profit maximum : ', profit_max
  WRITE 'solution optimal : ', solution_optimale

  list_optimal = []
  somme <- 0
  total <- 0

  FOR i in 1 to (gives the length of the solution_optimale)
    IF solution_optimale[i] == '1' THEN
      total <- total + tab_action[i]['profit']
      somme <- somme + tab_action[i]['price']
      add to list_optimal('name:',tab_action[i]['name'],'price:',tab_action[i]['price'],'profit:',tab_action[i]['profit'])
    ENDIF
  ENDFOR
  WRITE 'la liste: ',list_optimal
  WRITE 'total : ',total
  WRITE 'somme : ',somme 
END


    
    
    
    
    
    

    
    

  